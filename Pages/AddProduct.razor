@page "/add-product"
@inject Inventory.Services.ProductService ProductService
@using Inventory.Data
@using Inventory.Models
@inject NavigationManager NavigationManager

<h3>Add New Product</h3>

<label for="productName">Name:</label>
<input type="text" id="productName" @bind="newProduct.Name" />

<label for="productQuantity">Quantity:</label>
<input type="number" id="productQuantity" @bind="newProduct.Quantity" />

<label for="productPrice">Price:</label>
<input type="number" id="productPrice" @bind="newProduct.Price" />

<button @onclick="HandleAddProduct">Add Product</button>
<button @onclick="CancelAddProduct">Cancel</button>

@code {
    private Product newProduct = new Product();

    private async Task HandleAddProduct()  // Changed name here
    {
        if (newProduct != null && !string.IsNullOrEmpty(newProduct.Name) && newProduct.Quantity > 0 && newProduct.Price > 0)
        {
            await ProductService.AddProduct(newProduct);
            NavigationManager.NavigateTo("/products"); // Redirecting to products page after adding
        }
    }

    private void CancelAddProduct()
    {
        NavigationManager.NavigateTo("/products"); // Redirecting to products page on cancel
    }
}
